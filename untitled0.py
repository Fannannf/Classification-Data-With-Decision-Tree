# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XU8BEEVVIkgJE1X4NZqo5oYudKjTxnQY
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.tree import DecisionTreeClassifier
from sklearn import datasets

iris = datasets.load_iris()
fitur = iris['data']
target = iris['target']

decision = DecisionTreeClassifier(random_state=0,max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0,max_leaf_nodes=None,min_impurity_decrease=0)

model = decision.fit(fitur,target)

observasi = [[5,4,3,2]]
model.predict(observasi)
model.predict_proba(observasi)

import pydotplus
from sklearn import tree
dot_data = tree.export_graphviz(decision,out_file=None,feature_names=iris['feature_names'],class_names=iris['target_names'])

from IPython.display import Image
graph = pydotplus.graph_from_dot_data(dot_data)
Image(graph.create_png())
graph.write_png('iris.png')

iris_data = pd.read_csv('Dataset_Iris2.csv')

iris_data.head

iris_data.columns

iris_data['Species'] = pd.factorize(iris_data.Species)[0]

iris_data.head

iris_data = iris_data.drop(labels="Id", axis=1)

iris_data.head

iris_data = iris_data.to_numpy()

print(iris_data)

dataTraining = np.concatenate((iris_data[0:40,:],iris_data[50:90,:]),axis=0)
dataTesting = np.concatenate((iris_data[40:50,:],iris_data[90:100,:]),axis=0)

print(dataTesting)

inputTraining = dataTraining[:,0:4]
inputTesting = dataTesting[:,0:4]
labelTraining = dataTraining[:,4]
labelTesting = dataTesting[:,4]

len(labelTraining)

model = tree.DecisionTreeClassifier()

model = model.fit(inputTraining,labelTraining)

hasilPredik = model.predict(inputTesting)
print("Label Sebelumnya : ",labelTesting)
print("Hasil Prediksi   : ",hasilPredik)